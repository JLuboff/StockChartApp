<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title>FCC-Stock Chart App</title>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.4.3/css/bulma.css" type="text/css" rel="stylesheet">
</head>
<body>
  <section class="hero  is-light is-bold">
    <div class="hero-body">
      <div class="container">
  <div class="columns">
    <div class="column is-6 is-offset-3">
  <canvas id="stockChart" width="700" height="500"></canvas>
  </div></div>
  <div class="columns">
    <div class="column is-4 is-offset-4">
      <p id="failed"></p><br>
  <div id="inputStock" class="field has-addons">
    <div class="control">
  <input type="text" id="stockInput" placeholder="Stock symbol" class="input"/>
</div>
<div class="control">
  <a id="stockBtn" class="button is-info">Get Stock</a>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
  <section class="hero is-medium is-success is-bold">
    <div class="hero-body">
      <div class="container">


<div id="stockBox"></div>

<div id="currentData" class="columns">

    {{#each docs}}
    <div class="column">
      <article class="message is-info">
        <div class="message-header">
      <p>{{symbol}} </p>
      <button class="delete is-small" id="{{symbol}}"></button>
    </div>
    <div class="message-body">

        Closing Price: ${{stockData.[0].[1]}}
      </div>
    </article>
  </div>

    {{/each}}
</div>
</div>
</div>

</section>

    <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js" /></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.js"></script>
    <script>
    $(document).ready(() => {


    let socket = io.connect('http://localhost:3000');

    let stockSymbol = document.getElementById('stockInput'),
        btnAdd = document.getElementById('stockBtn'),
        failed = document.getElementById('failed'),
        output = document.getElementById('currentData');

    btnAdd.addEventListener('click', () => {

        socket.emit('getStock', stockSymbol.value)
    });

    $(document).on('click', '.delete', (e) => {
      console.log(`clicked ${e.target.id}`);

      socket.emit('deleteStock', e.target.id );
    })

    socket.on('connect', () => {
      console.log(socket.id);
    })

    socket.on('getStock', data => {
      if($.isArray(data) && data[1] === socket.id){
        $('#failed').empty();
        return failed.innerHTML += `<span id="failed" class="tag is-danger">${data[0]}</span>`
      };

      $('#failed').empty();
      output.innerHTML += `
      <div class="column is-2">
        <article class="message is-info">
          <div class="message-header">
        <p>${data.symbol} </p>
        <button class="delete is-small" id="${data.symbol}"></button>
      </div>
      <div class="message-body">

          Closing Price: ${data.stockData[0][1]}
        </div>
      </article>
      </div>
      `;
    //  <p><strong> ${data.symbol}:</strong> ${data.stockData[0][1]} </p>
      createChart();
    })

    socket.on('deleteStock', data => {
      console.log(data);

      $('#currentData').empty();
      data.forEach(el => {
      output.innerHTML += `
      <div class="column is-2">
        <article class="message is-info">
          <div class="message-header">
        <p>${el.symbol} </p>
        <button class="delete is-small" id="${el.symbol}"></button>
      </div>
      <div class="message-body">

          Closing Price: ${el.stockData[0][1]}
        </div>
      </article>
      </div>
      `;
      })
      createChart();
    })

    const createChart = () => {
      $.getJSON('/chartData', chartData => {

        let obj = [];

        label = [];
        chartData[0].stockData.forEach(el => {
        label.unshift(el[0]);
        });
        chartData.forEach(el => {
          let labels = [];
          let data = [];

          el.stockData.forEach(stock => {
            labels.unshift(stock[0]);
            data.unshift(stock[1]);
          })
          obj.push({
            label: el.symbol,
            fill: false,
            borderColor: el.color,
            data: data
          })
        })
        const ctx = document.getElementById('stockChart').getContext('2d');
        const chart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: label,
            datasets: obj
          },
          options: {
            responsive: true
          }
        })
      })
    };
    createChart();
      })
    </script>
</body>
</html>
